#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#    AST
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

shared class @displayDefinition : @definition {
  @lstring mBlockName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#    SYNTAX
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

syntax extension logicchecker_syntax {

  #·····················································································································

  rule <definition> !@definition outDefinition {
    $display$
    $identifier$ ?let blockName
    outDefinition = @displayDefinition.new {!blockName}
  }

  #·····················································································································

}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#   SEMANTICS
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @displayDefinition compute
  ?!@blockMap blockMap
  ?let @string unused inSourceFile
{
  message "--------------- Display " + self.mBlockName + "\n"
  [blockMap searchKey !self.mBlockName ?let bloc]
  let variableCount = [bloc.mInputVariableList length] + [bloc.mOutputVariableList length]
#--- Display states result
  message [[bloc.mStates valueCount !variableCount] string] + " states ("
    + [[bloc.mStates nodeCount] string] + " BDD nodes):\n"
  [bloc displayStates !bloc.mStates]
#--- Display transitions
  message [[bloc.mTransitions valueCount !2 * variableCount] string] + " transitions ("
    + [[bloc.mTransitions nodeCount] string] + " BDD nodes):\n"
  [bloc displayTransitions !bloc.mTransitions]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

