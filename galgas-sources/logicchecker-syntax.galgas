#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#    AST
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

abstract shared class @definition {}

#·······················································································································

abstract method @definition compute ?!@blockMap blockMap ?let @string inSourceFile

#·······················································································································

list @definitionList {
  @definition mDefinition
}

#·······················································································································

map @blockMap {
  @block mBlock
  insert insertKey error message "the '%K' block is already declared in %L"
  search searchKey error message "there is no '%K' block"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#    GRAMMAR
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

grammar logicchecker_grammar "SLR" {
  syntax logicchecker_syntax
  <start_symbol> !@definitionList outDefinitionList
}


#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#    SYNTAX
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

syntax logicchecker_syntax (logicchecker_lexique) {

  #·····················································································································

  rule <start_symbol> !@definitionList outDefinitionList {
    outDefinitionList = {}
    repeat
    while
      <definition> ?let definition
      outDefinitionList += !definition
    end
  }

  #·····················································································································

}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
